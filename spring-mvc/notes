the web.xml is the deployment descriptor.

Java EE is a standard - a way to build web applications.
Servlets, JPA, JAX-rs(rest services support) are parts of this Java EE.

Spring MVC uses the pattern known as front controller. 
All requests are diverted to the front controller. 

The way spring mvc works is we have 

M - Models - object models of things we develop.
C - Controller - the requests first comes here.


History;

Model 1 Architecture 
	only jsp's. - all business logic was also written here. 
	no servlets controllers.
	
Model 2 MVC. 
	We also have a front controller - where all the request are directed first.
	This is known as the dispatcher servlet.


Component scan and autowiring are part of the feature 
'dependency injection' provided by spring. 

Dependency injection is the feature provided by the CORE CONTAINER MODULE. 
it also handles number of basic feature.
i18n, message bundle, property file loading.

Most important functionality of the core container is bean lifecycle management.
BeanFactory - helps in the same.
 
 Context - Application context.
 
 Spring MVC - web module of the spring framework.
 
 Spring data access / integration module - 
 jdbc - 
 orm - orm frameworks integration.
 oxm - java to xml and vice versa.
 
 AOP  - intercepting calls 
 
 
 Back to spring mvc.
 
 Scopes. 
 
 Request scope - 
  when a url is passed as get /todos?username=${username}
  the attribute username is only present for this particular request scope.
  For using it, each type you will have to put it in the model map. 
  
To put it into a session scope. 
Done for username in logincontroller & todocontroller.

According to Rod Johnson's book - 
using model is preferred over passing parameters over a request attribute.

This course covers core features of spring mvc.
i18n is not done here.

spring security will be taken as a separate topic.

spring framework next & then jpa and hibernate.